// Generated by dojo-bindgen on Mon, 13 Oct 2025 15:57:53 +0000. Do not modify this file manually.
using System;
using Dojo;
using Dojo.Starknet;
using System.Reflection;
using System.Linq;
using System.Collections.Generic;
using Enum = Dojo.Starknet.Enum;
using BigInteger = System.Numerics.BigInteger;

// Type definition for `dojo_starter::models::AttackSubtype` enum
public abstract record AttackSubtype() : Enum {
    public record Projectile() : AttackSubtype;
    public record AoE() : AttackSubtype;
}

// Type definition for `dojo_starter::models::SpellElement` enum
public abstract record SpellElement() : Enum {
    public record Fire() : SpellElement;
    public record Water() : SpellElement;
    public record Lightning() : SpellElement;
    public record Wind() : SpellElement;
}


// Model definition for `dojo_starter::models::SpellCore` model
public class dojo_starter_SpellCore : ModelInstance {
    [ModelField("spell_id")]
        public FieldElement spell_id;

        [ModelField("creator")]
        public FieldElement creator;

        [ModelField("element")]
        public SpellElement element;

        [ModelField("attack_subtype")]
        public AttackSubtype attack_subtype;

        [ModelField("damage")]
        public ushort damage;

        [ModelField("knockback")]
        public ushort knockback;

        [ModelField("projectile_speed")]
        public ushort projectile_speed;

        [ModelField("projectile_size")]
        public ushort projectile_size;

        [ModelField("number_of_projectiles")]
        public byte number_of_projectiles;

        [ModelField("staggered_angle")]
        public short staggered_angle;

        [ModelField("zigzag_amplitude")]
        public ushort zigzag_amplitude;

        [ModelField("zigzag_frequency")]
        public ushort zigzag_frequency;

        [ModelField("homing_radius")]
        public ushort homing_radius;

        [ModelField("arc_gravity")]
        public ushort arc_gravity;

        [ModelField("random_offset")]
        public ushort random_offset;

        [ModelField("circular_speed")]
        public ushort circular_speed;

        [ModelField("circular_radius")]
        public ushort circular_radius;

        [ModelField("mana_cost")]
        public ushort mana_cost;

        [ModelField("cooldown")]
        public ushort cooldown;

    // Start is called before the first frame update
    void Start() {
    }

    // Update is called once per frame
    void Update() {
    }
}

        