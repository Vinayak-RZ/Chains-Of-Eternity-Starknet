// Generated by dojo-bindgen on Sun, 12 Oct 2025 02:13:17 +0000. Do not modify this file manually.
using System;
using Dojo;
using Dojo.Starknet;
using System.Reflection;
using System.Linq;
using System.Collections.Generic;
using Enum = Dojo.Starknet.Enum;
using BigInteger = System.Numerics.BigInteger;

// Type definition for `dojo_starter::models::Vec2i` struct
[Serializable]
public struct Vec2i {
    public int x;
    public int y;
}

// Type definition for `dojo_starter::models::PlayerFSMState` enum
public abstract record PlayerFSMState() : Enum {
    public record Idle() : PlayerFSMState;
    public record Running() : PlayerFSMState;
    public record Dashing() : PlayerFSMState;
    public record Attacking() : PlayerFSMState;
    public record Dead() : PlayerFSMState;
}


// Model definition for `dojo_starter::models::PlayerState` model
public class dojo_starter_PlayerState : ModelInstance {
    [ModelField("player")]
        public FieldElement player;

        [ModelField("state")]
        public PlayerFSMState state;

        [ModelField("facing_dir")]
        public short facing_dir;

        [ModelField("position")]
        public Vec2i position;

        [ModelField("velocity")]
        public short velocity;

        [ModelField("last_updated")]
        public ulong last_updated;

        [ModelField("is_alive")]
        public bool is_alive;

    // Start is called before the first frame update
    void Start() {
    }

    // Update is called once per frame
    void Update() {
    }
}

        